[{"data":1,"prerenderedAt":506},["Reactive",2],{"content-query-YwQ4RGeADB":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"date":11,"draft":7,"tags":12,"thumbnail":17,"slug":18,"excerpt":19,"body":29,"_type":501,"_id":502,"_source":503,"_file":504,"_extension":505},"/posts/mongo-db","posts",false,"","Integrating MongoDB and Mongoose with Nuxt 3","Building dynamic web applications often requires seamless integration with a robust database solution. When it comes to creating powerful server-side applications, MongoDB has emerged as a popular choice among developers due to its flexibility and scalability. Combined with the Vue.js framework, Nuxt.js provides a solid foundation for building fast, server-rendered applications. However, incorporating MongoDB and its object modeling tool, Mongoose, into a Nuxt project might seem like a daunting task for those new to the stack.","2023-10-06T00:00:00.000Z",[13,14,15,16],"nuxt","nuxt3","mongodb","mongoose","/img/mongodb.webp","mongo-db",{"type":20,"children":21},"root",[22],{"type":23,"tag":24,"props":25,"children":26},"element","p",{},[27],{"type":28,"value":10},"text",{"type":20,"children":30,"toc":487},[31,35,40,47,52,65,70,79,84,90,106,111,121,142,168,179,192,201,206,224,234,252,261,274,281,286,297,303,308,314,328,341,350,355,364,369,379,398,407,412,417,422,426,431,436,440,454,460,465],{"type":23,"tag":24,"props":32,"children":33},{},[34],{"type":28,"value":10},{"type":23,"tag":24,"props":36,"children":37},{},[38],{"type":28,"value":39},"In this blog post, we'll explore two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":23,"tag":41,"props":42,"children":44},"h2",{"id":43},"prerequisites",[45],{"type":28,"value":46},"Prerequisites",{"type":23,"tag":24,"props":48,"children":49},{},[50],{"type":28,"value":51},"Before we get started, make sure you have a working nuxt 3 project. If you don't have one already, you can create a new project using the following command:",{"type":23,"tag":53,"props":54,"children":59},"pre",{"className":55,"code":57,"language":58,"meta":8},[56],"language-bash","npx nuxi init \u003Cproject-name>\n","bash",[60],{"type":23,"tag":61,"props":62,"children":63},"code",{"__ignoreMap":8},[64],{"type":28,"value":57},{"type":23,"tag":24,"props":66,"children":67},{},[68],{"type":28,"value":69},"Once the project is created, navigate to the project directory and install the dependencies:",{"type":23,"tag":53,"props":71,"children":74},{"className":72,"code":73,"language":58,"meta":8},[56],"cd \u003Cproject-name>\nnpm install // or yarn install\n",[75],{"type":23,"tag":61,"props":76,"children":77},{"__ignoreMap":8},[78],{"type":28,"value":73},{"type":23,"tag":24,"props":80,"children":81},{},[82],{"type":28,"value":83},"Now that we have a working nuxt 3 project, let's explore the two methods of adding MongoDB and Mongoose to our project.",{"type":23,"tag":41,"props":85,"children":87},{"id":86},"method-1-using-the-nuxt-server-utils-module",[88],{"type":28,"value":89},"Method 1: Using the nuxt-server-utils module",{"type":23,"tag":24,"props":91,"children":92},{},[93,95,104],{"type":28,"value":94},"This is the easiest way to add MongoDB and Mongoose to your Nuxt 3 project. The ",{"type":23,"tag":96,"props":97,"children":101},"a",{"href":98,"rel":99},"https://nuxt-server-utils.jahid.dev",[100],"nofollow",[102],{"type":28,"value":103},"nuxt-server-utils",{"type":28,"value":105}," module provides a set of utilities that allow you to interact with your MongoDB database from within your Nuxt 3 application. It also provides a simple API for creating and managing your MongoDB collections.",{"type":23,"tag":24,"props":107,"children":108},{},[109],{"type":28,"value":110},"To get started, install the nuxt-server-utils module using the following command:",{"type":23,"tag":53,"props":112,"children":116},{"className":113,"code":114,"filename":115,"language":58,"meta":8},[56],"npm install nuxt-server-utils mongoose\n","npm",[117],{"type":23,"tag":61,"props":118,"children":119},{"__ignoreMap":8},[120],{"type":28,"value":114},{"type":23,"tag":24,"props":122,"children":123},{},[124,126,132,134,140],{"type":28,"value":125},"Next, Add the nuxt-server-utils module to the ",{"type":23,"tag":61,"props":127,"children":129},{"className":128},[],[130],{"type":28,"value":131},"modules",{"type":28,"value":133}," section of your ",{"type":23,"tag":61,"props":135,"children":137},{"className":136},[],[138],{"type":28,"value":139},"nuxt.config.ts",{"type":28,"value":141}," file:",{"type":23,"tag":24,"props":143,"children":144},{},[145,147,152,154,159,161,166],{"type":28,"value":146},"Add ",{"type":23,"tag":61,"props":148,"children":150},{"className":149},[],[151],{"type":28,"value":103},{"type":28,"value":153}," to the ",{"type":23,"tag":61,"props":155,"children":157},{"className":156},[],[158],{"type":28,"value":131},{"type":28,"value":160}," section of ",{"type":23,"tag":61,"props":162,"children":164},{"className":163},[],[165],{"type":28,"value":139},{"type":28,"value":167},":",{"type":23,"tag":53,"props":169,"children":174},{"className":170,"code":172,"filename":139,"language":173,"meta":8},[171],"language-ts","export default defineNuxtConfig({\n  // ...\n  modules: [\"nuxt-server-utils\"],\n});\n","ts",[175],{"type":23,"tag":61,"props":176,"children":177},{"__ignoreMap":8},[178],{"type":28,"value":172},{"type":23,"tag":24,"props":180,"children":181},{},[182,184,190],{"type":28,"value":183},"Finally, add the MongoDB connection string to the ",{"type":23,"tag":61,"props":185,"children":187},{"className":186},[],[188],{"type":28,"value":189},".env",{"type":28,"value":191}," file of your nuxt app:",{"type":23,"tag":53,"props":193,"children":196},{"className":194,"code":195,"filename":189,"language":58,"meta":8},[56],"MONGODB_URI=\u003Cyour-mongodb-connection-string>\n",[197],{"type":23,"tag":61,"props":198,"children":199},{"__ignoreMap":8},[200],{"type":28,"value":195},{"type":23,"tag":24,"props":202,"children":203},{},[204],{"type":28,"value":205},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.\nFor example, let's create a simple server route that returns all the documents from a MongoDB collection:",{"type":23,"tag":24,"props":207,"children":208},{},[209,215,217,223],{"type":23,"tag":210,"props":211,"children":212},"strong",{},[213],{"type":28,"value":214},"Defining the Mongoose model",{"type":28,"value":216}," in ",{"type":23,"tag":61,"props":218,"children":220},{"className":219},[],[221],{"type":28,"value":222},"server/models/user.model.ts",{"type":28,"value":167},{"type":23,"tag":53,"props":225,"children":229},{"className":226,"code":227,"filename":228,"language":173,"meta":8},[171],"import { Schema, model } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  name: String,\n  email: String,\n});\n\nexport const User = model(\"User\", UserSchema);\n","server/models/User.ts",[230],{"type":23,"tag":61,"props":231,"children":232},{"__ignoreMap":8},[233],{"type":28,"value":227},{"type":23,"tag":24,"props":235,"children":236},{},[237,239,244,245,251],{"type":28,"value":238},"Now let's create the ",{"type":23,"tag":210,"props":240,"children":241},{},[242],{"type":28,"value":243},"API Route",{"type":28,"value":216},{"type":23,"tag":61,"props":246,"children":248},{"className":247},[],[249],{"type":28,"value":250},"server/api/users.get.ts",{"type":28,"value":167},{"type":23,"tag":53,"props":253,"children":256},{"className":254,"code":255,"filename":250,"language":173,"meta":8},[171],"import { User } from \"~~/server/models/user.model\";\n\nexport default defineEventHandler(async (event) => {\n  const users = await User.find();\n\n  return Users;\n});\n",[257],{"type":23,"tag":61,"props":258,"children":259},{"__ignoreMap":8},[260],{"type":28,"value":255},{"type":23,"tag":24,"props":262,"children":263},{},[264,266,272],{"type":28,"value":265},"If you navigate to the ",{"type":23,"tag":61,"props":267,"children":269},{"className":268},[],[270],{"type":28,"value":271},"/api/users",{"type":28,"value":273}," route, you should see a list of all the users in your database.",{"type":23,"tag":275,"props":276,"children":278},"h3",{"id":277},"video-tutorial",[279],{"type":28,"value":280},"Video Tutorial",{"type":23,"tag":24,"props":282,"children":283},{},[284],{"type":28,"value":285},"If you enjoy learning through video tutorials, I have created a video where i walk you through the above steps:",{"type":23,"tag":287,"props":288,"children":296},"iframe",{"loading":289,"style":290,"src":291,"title":292,"frameBorder":293,"allow":294,"allowFullScreen":295},"lazy","border: 0; top: 0; left: 0; width: 100%; height: 350px;","https://www.youtube.com/embed/h10sAu3ETr8","YouTube video player","0","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",true,[],{"type":23,"tag":275,"props":298,"children":300},{"id":299},"example-project",[301],{"type":28,"value":302},"Example Project",{"type":23,"tag":287,"props":304,"children":307},{"loading":289,"style":305,"src":306,"scrolling":8,"allowFullScreen":295},"border: 0; top: 0; left: 0; width: 100%; height: 500px;","https://stackblitz.com/edit/nuxt-server-utils?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1",[],{"type":23,"tag":41,"props":309,"children":311},{"id":310},"method-2-creating-a-nitro-plugin",[312],{"type":28,"value":313},"Method 2: Creating a Nitro plugin",{"type":23,"tag":24,"props":315,"children":316},{},[317,319,326],{"type":28,"value":318},"Nuxt 3 uses ",{"type":23,"tag":96,"props":320,"children":323},{"href":321,"rel":322},"https://nitro.unjs.io/",[100],[324],{"type":28,"value":325},"Nitro",{"type":28,"value":327}," under the hood to power its server-side rendering capabilities. Nitro provides a simple API for creating plugins that can be used to extend the functionality of your Nuxt 3 application.\nIn this section, we'll create a Nitro plugin that will allow us to use MongoDB and Mongoose in our Nuxt 3 project.",{"type":23,"tag":24,"props":329,"children":330},{},[331,333,339],{"type":28,"value":332},"First, let's create a new plugin file in the ",{"type":23,"tag":61,"props":334,"children":336},{"className":335},[],[337],{"type":28,"value":338},"server/plugins",{"type":28,"value":340}," directory:",{"type":23,"tag":53,"props":342,"children":345},{"className":343,"code":344,"language":58,"meta":8},[56],"touch server/plugins/mongodb.ts\n",[346],{"type":23,"tag":61,"props":347,"children":348},{"__ignoreMap":8},[349],{"type":28,"value":344},{"type":23,"tag":24,"props":351,"children":352},{},[353],{"type":28,"value":354},"Then let's install the required dependencies:",{"type":23,"tag":53,"props":356,"children":359},{"className":357,"code":358,"language":58,"meta":8},[56],"npm install mongoose\n",[360],{"type":23,"tag":61,"props":361,"children":362},{"__ignoreMap":8},[363],{"type":28,"value":358},{"type":23,"tag":24,"props":365,"children":366},{},[367],{"type":28,"value":368},"Next, let's add the following code to the newly created plugin file:",{"type":23,"tag":53,"props":370,"children":374},{"className":371,"code":372,"filename":373,"language":173,"meta":8},[171],"import { Nitro } from \"nitropack\";\nimport mongoose from \"mongoose\";\n\nexport default async (_nitroApp: Nitro) => {\n  const config = useRuntimeConfig();\n\n  try {\n    await mongoose.connect(config.mongodbUri);\n    console.log(\"Connected to MongoDB\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n","server/plugins/mongodb.ts",[375],{"type":23,"tag":61,"props":376,"children":377},{"__ignoreMap":8},[378],{"type":28,"value":372},{"type":23,"tag":24,"props":380,"children":381},{},[382,384,390,392,397],{"type":28,"value":383},"Finally, let's add the plugin to the ",{"type":23,"tag":61,"props":385,"children":387},{"className":386},[],[388],{"type":28,"value":389},"plugins",{"type":28,"value":391}," section of our ",{"type":23,"tag":61,"props":393,"children":395},{"className":394},[],[396],{"type":28,"value":139},{"type":28,"value":141},{"type":23,"tag":53,"props":399,"children":402},{"className":400,"code":401,"filename":139,"language":173,"meta":8},[171],"export default defineNuxtConfig({\n  // ...\n  nitro: {\n    plugins: [\"~/server/plugins/mongodb.ts\"],\n  },\n});\n",[403],{"type":23,"tag":61,"props":404,"children":405},{"__ignoreMap":8},[406],{"type":28,"value":401},{"type":23,"tag":24,"props":408,"children":409},{},[410],{"type":28,"value":411},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.",{"type":23,"tag":275,"props":413,"children":415},{"id":414},"video-tutorial-1",[416],{"type":28,"value":280},{"type":23,"tag":24,"props":418,"children":419},{},[420],{"type":28,"value":421},"If you prefer video tutorials, you can watch the following video where I walk you through the process of adding MongoDB and Mongoose to a Nuxt 3 project:",{"type":23,"tag":287,"props":423,"children":425},{"loading":289,"style":290,"src":424,"title":292,"frameBorder":293,"allow":294,"allowFullScreen":295},"https://www.youtube.com/embed/EidO0c9L6b0",[],{"type":23,"tag":275,"props":427,"children":429},{"id":428},"example-project-1",[430],{"type":28,"value":302},{"type":23,"tag":24,"props":432,"children":433},{},[434],{"type":28,"value":435},"Play around with the example project to get a better understanding of how to use MongoDB and Mongoose with Nuxt 3.",{"type":23,"tag":287,"props":437,"children":439},{"loading":289,"style":305,"src":438,"scrolling":8,"allowFullScreen":295},"https://stackblitz.com/github/jahidanowar/nuxt3-mongoose?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1&theme=dark&view=editor",[],{"type":23,"tag":24,"props":441,"children":442},{},[443,445,452],{"type":28,"value":444},"You ca find the full source code of this example ",{"type":23,"tag":96,"props":446,"children":449},{"href":447,"rel":448},"https://github.com/jahidanowar/nuxt3-mongoose",[100],[450],{"type":28,"value":451},"here",{"type":28,"value":453},".",{"type":23,"tag":41,"props":455,"children":457},{"id":456},"conclusion",[458],{"type":28,"value":459},"Conclusion",{"type":23,"tag":24,"props":461,"children":462},{},[463],{"type":28,"value":464},"In this blog post, we explored two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":23,"tag":24,"props":466,"children":467},{},[468,470,477,479,486],{"type":28,"value":469},"If you have any questions or feedback, feel free to reach out to me on ",{"type":23,"tag":96,"props":471,"children":474},{"href":472,"rel":473},"https://jahid.dev/d",[100],[475],{"type":28,"value":476},"Discord",{"type":28,"value":478}," or ",{"type":23,"tag":96,"props":480,"children":483},{"href":481,"rel":482},"https://twitter.com/jahidDev",[100],[484],{"type":28,"value":485},"Twitter",{"type":28,"value":453},{"title":8,"searchDepth":488,"depth":488,"links":489},2,[490,491,496,500],{"id":43,"depth":488,"text":46},{"id":86,"depth":488,"text":89,"children":492},[493,495],{"id":277,"depth":494,"text":280},3,{"id":299,"depth":494,"text":302},{"id":310,"depth":488,"text":313,"children":497},[498,499],{"id":414,"depth":494,"text":280},{"id":428,"depth":494,"text":302},{"id":456,"depth":488,"text":459},"markdown","content:posts:mongo-db.md","content","posts/mongo-db.md","md",1706457784318]