[{"data":1,"prerenderedAt":505},["Reactive",2],{"content-query-GoFHVgRytf":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"draft":6,"tags":11,"thumbnail":16,"slug":17,"excerpt":18,"body":28,"_type":500,"_id":501,"_source":502,"_file":503,"_extension":504},"/posts/mongo-db","posts",false,"","Integrating MongoDB and Mongoose with Nuxt 3","Building dynamic web applications often requires seamless integration with a robust database solution. When it comes to creating powerful server-side applications, MongoDB has emerged as a popular choice among developers due to its flexibility and scalability. Combined with the Vue.js framework, Nuxt.js provides a solid foundation for building fast, server-rendered applications. However, incorporating MongoDB and its object modeling tool, Mongoose, into a Nuxt project might seem like a daunting task for those new to the stack.","2023-10-06T00:00:00.000Z",[12,13,14,15],"nuxt","nuxt3","mongodb","mongoose","/img/mongodb.webp","mongo-db",{"type":19,"children":20},"root",[21],{"type":22,"tag":23,"props":24,"children":25},"element","p",{},[26],{"type":27,"value":9},"text",{"type":19,"children":29,"toc":486},[30,34,39,46,51,64,69,78,83,89,105,110,120,141,167,178,191,200,205,223,233,251,260,273,280,285,296,302,307,313,327,340,349,354,363,368,378,397,406,411,416,421,425,430,435,439,453,459,464],{"type":22,"tag":23,"props":31,"children":32},{},[33],{"type":27,"value":9},{"type":22,"tag":23,"props":35,"children":36},{},[37],{"type":27,"value":38},"In this blog post, we'll explore two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":22,"tag":40,"props":41,"children":43},"h2",{"id":42},"prerequisites",[44],{"type":27,"value":45},"Prerequisites",{"type":22,"tag":23,"props":47,"children":48},{},[49],{"type":27,"value":50},"Before we get started, make sure you have a working nuxt 3 project. If you don't have one already, you can create a new project using the following command:",{"type":22,"tag":52,"props":53,"children":58},"pre",{"className":54,"code":56,"language":57,"meta":7},[55],"language-bash","npx nuxi init \u003Cproject-name>\n","bash",[59],{"type":22,"tag":60,"props":61,"children":62},"code",{"__ignoreMap":7},[63],{"type":27,"value":56},{"type":22,"tag":23,"props":65,"children":66},{},[67],{"type":27,"value":68},"Once the project is created, navigate to the project directory and install the dependencies:",{"type":22,"tag":52,"props":70,"children":73},{"className":71,"code":72,"language":57,"meta":7},[55],"cd \u003Cproject-name>\nnpm install // or yarn install\n",[74],{"type":22,"tag":60,"props":75,"children":76},{"__ignoreMap":7},[77],{"type":27,"value":72},{"type":22,"tag":23,"props":79,"children":80},{},[81],{"type":27,"value":82},"Now that we have a working nuxt 3 project, let's explore the two methods of adding MongoDB and Mongoose to our project.",{"type":22,"tag":40,"props":84,"children":86},{"id":85},"method-1-using-the-nuxt-server-utils-module",[87],{"type":27,"value":88},"Method 1: Using the nuxt-server-utils module",{"type":22,"tag":23,"props":90,"children":91},{},[92,94,103],{"type":27,"value":93},"This is the easiest way to add MongoDB and Mongoose to your Nuxt 3 project. The ",{"type":22,"tag":95,"props":96,"children":100},"a",{"href":97,"rel":98},"https://nuxt-server-utils.jahid.dev",[99],"nofollow",[101],{"type":27,"value":102},"nuxt-server-utils",{"type":27,"value":104}," module provides a set of utilities that allow you to interact with your MongoDB database from within your Nuxt 3 application. It also provides a simple API for creating and managing your MongoDB collections.",{"type":22,"tag":23,"props":106,"children":107},{},[108],{"type":27,"value":109},"To get started, install the nuxt-server-utils module using the following command:",{"type":22,"tag":52,"props":111,"children":115},{"className":112,"code":113,"filename":114,"language":57,"meta":7},[55],"npm install nuxt-server-utils mongoose\n","npm",[116],{"type":22,"tag":60,"props":117,"children":118},{"__ignoreMap":7},[119],{"type":27,"value":113},{"type":22,"tag":23,"props":121,"children":122},{},[123,125,131,133,139],{"type":27,"value":124},"Next, Add the nuxt-server-utils module to the ",{"type":22,"tag":60,"props":126,"children":128},{"className":127},[],[129],{"type":27,"value":130},"modules",{"type":27,"value":132}," section of your ",{"type":22,"tag":60,"props":134,"children":136},{"className":135},[],[137],{"type":27,"value":138},"nuxt.config.ts",{"type":27,"value":140}," file:",{"type":22,"tag":23,"props":142,"children":143},{},[144,146,151,153,158,160,165],{"type":27,"value":145},"Add ",{"type":22,"tag":60,"props":147,"children":149},{"className":148},[],[150],{"type":27,"value":102},{"type":27,"value":152}," to the ",{"type":22,"tag":60,"props":154,"children":156},{"className":155},[],[157],{"type":27,"value":130},{"type":27,"value":159}," section of ",{"type":22,"tag":60,"props":161,"children":163},{"className":162},[],[164],{"type":27,"value":138},{"type":27,"value":166},":",{"type":22,"tag":52,"props":168,"children":173},{"className":169,"code":171,"filename":138,"language":172,"meta":7},[170],"language-ts","export default defineNuxtConfig({\n  // ...\n  modules: [\"nuxt-server-utils\"],\n});\n","ts",[174],{"type":22,"tag":60,"props":175,"children":176},{"__ignoreMap":7},[177],{"type":27,"value":171},{"type":22,"tag":23,"props":179,"children":180},{},[181,183,189],{"type":27,"value":182},"Finally, add the MongoDB connection string to the ",{"type":22,"tag":60,"props":184,"children":186},{"className":185},[],[187],{"type":27,"value":188},".env",{"type":27,"value":190}," file of your nuxt app:",{"type":22,"tag":52,"props":192,"children":195},{"className":193,"code":194,"filename":188,"language":57,"meta":7},[55],"MONGODB_URI=\u003Cyour-mongodb-connection-string>\n",[196],{"type":22,"tag":60,"props":197,"children":198},{"__ignoreMap":7},[199],{"type":27,"value":194},{"type":22,"tag":23,"props":201,"children":202},{},[203],{"type":27,"value":204},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.\nFor example, let's create a simple server route that returns all the documents from a MongoDB collection:",{"type":22,"tag":23,"props":206,"children":207},{},[208,214,216,222],{"type":22,"tag":209,"props":210,"children":211},"strong",{},[212],{"type":27,"value":213},"Defining the Mongoose model",{"type":27,"value":215}," in ",{"type":22,"tag":60,"props":217,"children":219},{"className":218},[],[220],{"type":27,"value":221},"server/models/user.model.ts",{"type":27,"value":166},{"type":22,"tag":52,"props":224,"children":228},{"className":225,"code":226,"filename":227,"language":172,"meta":7},[170],"import { Schema, model } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  name: String,\n  email: String,\n});\n\nexport const User = model(\"User\", UserSchema);\n","server/models/User.ts",[229],{"type":22,"tag":60,"props":230,"children":231},{"__ignoreMap":7},[232],{"type":27,"value":226},{"type":22,"tag":23,"props":234,"children":235},{},[236,238,243,244,250],{"type":27,"value":237},"Now let's create the ",{"type":22,"tag":209,"props":239,"children":240},{},[241],{"type":27,"value":242},"API Route",{"type":27,"value":215},{"type":22,"tag":60,"props":245,"children":247},{"className":246},[],[248],{"type":27,"value":249},"server/api/users.get.ts",{"type":27,"value":166},{"type":22,"tag":52,"props":252,"children":255},{"className":253,"code":254,"filename":249,"language":172,"meta":7},[170],"import { User } from \"~~/server/models/user.model\";\n\nexport default defineEventHandler(async (event) => {\n  const users = await User.find();\n\n  return Users;\n});\n",[256],{"type":22,"tag":60,"props":257,"children":258},{"__ignoreMap":7},[259],{"type":27,"value":254},{"type":22,"tag":23,"props":261,"children":262},{},[263,265,271],{"type":27,"value":264},"If you navigate to the ",{"type":22,"tag":60,"props":266,"children":268},{"className":267},[],[269],{"type":27,"value":270},"/api/users",{"type":27,"value":272}," route, you should see a list of all the users in your database.",{"type":22,"tag":274,"props":275,"children":277},"h3",{"id":276},"video-tutorial",[278],{"type":27,"value":279},"Video Tutorial",{"type":22,"tag":23,"props":281,"children":282},{},[283],{"type":27,"value":284},"If you enjoy learning through video tutorials, I have created a video where i walk you through the above steps:",{"type":22,"tag":286,"props":287,"children":295},"iframe",{"loading":288,"style":289,"src":290,"title":291,"frameBorder":292,"allow":293,"allowFullScreen":294},"lazy","border: 0; top: 0; left: 0; width: 100%; height: 350px;","https://www.youtube.com/embed/h10sAu3ETr8","YouTube video player","0","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",true,[],{"type":22,"tag":274,"props":297,"children":299},{"id":298},"example-project",[300],{"type":27,"value":301},"Example Project",{"type":22,"tag":286,"props":303,"children":306},{"loading":288,"style":304,"src":305,"scrolling":7,"allowFullScreen":294},"border: 0; top: 0; left: 0; width: 100%; height: 500px;","https://stackblitz.com/edit/nuxt-server-utils?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1",[],{"type":22,"tag":40,"props":308,"children":310},{"id":309},"method-2-creating-a-nitro-plugin",[311],{"type":27,"value":312},"Method 2: Creating a Nitro plugin",{"type":22,"tag":23,"props":314,"children":315},{},[316,318,325],{"type":27,"value":317},"Nuxt 3 uses ",{"type":22,"tag":95,"props":319,"children":322},{"href":320,"rel":321},"https://nitro.unjs.io/",[99],[323],{"type":27,"value":324},"Nitro",{"type":27,"value":326}," under the hood to power its server-side rendering capabilities. Nitro provides a simple API for creating plugins that can be used to extend the functionality of your Nuxt 3 application.\nIn this section, we'll create a Nitro plugin that will allow us to use MongoDB and Mongoose in our Nuxt 3 project.",{"type":22,"tag":23,"props":328,"children":329},{},[330,332,338],{"type":27,"value":331},"First, let's create a new plugin file in the ",{"type":22,"tag":60,"props":333,"children":335},{"className":334},[],[336],{"type":27,"value":337},"server/plugins",{"type":27,"value":339}," directory:",{"type":22,"tag":52,"props":341,"children":344},{"className":342,"code":343,"language":57,"meta":7},[55],"touch server/plugins/mongodb.ts\n",[345],{"type":22,"tag":60,"props":346,"children":347},{"__ignoreMap":7},[348],{"type":27,"value":343},{"type":22,"tag":23,"props":350,"children":351},{},[352],{"type":27,"value":353},"Then let's install the required dependencies:",{"type":22,"tag":52,"props":355,"children":358},{"className":356,"code":357,"language":57,"meta":7},[55],"npm install mongoose\n",[359],{"type":22,"tag":60,"props":360,"children":361},{"__ignoreMap":7},[362],{"type":27,"value":357},{"type":22,"tag":23,"props":364,"children":365},{},[366],{"type":27,"value":367},"Next, let's add the following code to the newly created plugin file:",{"type":22,"tag":52,"props":369,"children":373},{"className":370,"code":371,"filename":372,"language":172,"meta":7},[170],"import { Nitro } from \"nitropack\";\nimport mongoose from \"mongoose\";\n\nexport default async (_nitroApp: Nitro) => {\n  const config = useRuntimeConfig();\n\n  try {\n    await mongoose.connect(config.mongodbUri);\n    console.log(\"Connected to MongoDB\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n","server/plugins/mongodb.ts",[374],{"type":22,"tag":60,"props":375,"children":376},{"__ignoreMap":7},[377],{"type":27,"value":371},{"type":22,"tag":23,"props":379,"children":380},{},[381,383,389,391,396],{"type":27,"value":382},"Finally, let's add the plugin to the ",{"type":22,"tag":60,"props":384,"children":386},{"className":385},[],[387],{"type":27,"value":388},"plugins",{"type":27,"value":390}," section of our ",{"type":22,"tag":60,"props":392,"children":394},{"className":393},[],[395],{"type":27,"value":138},{"type":27,"value":140},{"type":22,"tag":52,"props":398,"children":401},{"className":399,"code":400,"filename":138,"language":172,"meta":7},[170],"export default defineNuxtConfig({\n  // ...\n  nitro: {\n    plugins: [\"~/server/plugins/mongodb.ts\"],\n  },\n});\n",[402],{"type":22,"tag":60,"props":403,"children":404},{"__ignoreMap":7},[405],{"type":27,"value":400},{"type":22,"tag":23,"props":407,"children":408},{},[409],{"type":27,"value":410},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.",{"type":22,"tag":274,"props":412,"children":414},{"id":413},"video-tutorial-1",[415],{"type":27,"value":279},{"type":22,"tag":23,"props":417,"children":418},{},[419],{"type":27,"value":420},"If you prefer video tutorials, you can watch the following video where I walk you through the process of adding MongoDB and Mongoose to a Nuxt 3 project:",{"type":22,"tag":286,"props":422,"children":424},{"loading":288,"style":289,"src":423,"title":291,"frameBorder":292,"allow":293,"allowFullScreen":294},"https://www.youtube.com/embed/EidO0c9L6b0",[],{"type":22,"tag":274,"props":426,"children":428},{"id":427},"example-project-1",[429],{"type":27,"value":301},{"type":22,"tag":23,"props":431,"children":432},{},[433],{"type":27,"value":434},"Play around with the example project to get a better understanding of how to use MongoDB and Mongoose with Nuxt 3.",{"type":22,"tag":286,"props":436,"children":438},{"loading":288,"style":304,"src":437,"scrolling":7,"allowFullScreen":294},"https://stackblitz.com/github/jahidanowar/nuxt3-mongoose?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1&theme=dark&view=editor",[],{"type":22,"tag":23,"props":440,"children":441},{},[442,444,451],{"type":27,"value":443},"You ca find the full source code of this example ",{"type":22,"tag":95,"props":445,"children":448},{"href":446,"rel":447},"https://github.com/jahidanowar/nuxt3-mongoose",[99],[449],{"type":27,"value":450},"here",{"type":27,"value":452},".",{"type":22,"tag":40,"props":454,"children":456},{"id":455},"conclusion",[457],{"type":27,"value":458},"Conclusion",{"type":22,"tag":23,"props":460,"children":461},{},[462],{"type":27,"value":463},"In this blog post, we explored two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":22,"tag":23,"props":465,"children":466},{},[467,469,476,478,485],{"type":27,"value":468},"If you have any questions or feedback, feel free to reach out to me on ",{"type":22,"tag":95,"props":470,"children":473},{"href":471,"rel":472},"https://jahid.dev/d",[99],[474],{"type":27,"value":475},"Discord",{"type":27,"value":477}," or ",{"type":22,"tag":95,"props":479,"children":482},{"href":480,"rel":481},"https://twitter.com/jahidDev",[99],[483],{"type":27,"value":484},"Twitter",{"type":27,"value":452},{"title":7,"searchDepth":487,"depth":487,"links":488},2,[489,490,495,499],{"id":42,"depth":487,"text":45},{"id":85,"depth":487,"text":88,"children":491},[492,494],{"id":276,"depth":493,"text":279},3,{"id":298,"depth":493,"text":301},{"id":309,"depth":487,"text":312,"children":496},[497,498],{"id":413,"depth":493,"text":279},{"id":427,"depth":493,"text":301},{"id":455,"depth":487,"text":458},"markdown","content:posts:mongo-db.md","content","posts/mongo-db.md","md",1706457784358]